name: GitGoogleContainer
on:
  push:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # - uses: actions/checkout@v2
      # - name: Login in Docker Registry
      #   uses: docker/login-action@v1
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.repository_owner }}
      #     password: ${{ secrets.GHCRIOTOKEN }}
      - name: Login in Dockerhub Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Docker pull and push
        run: |
          images=(
            k8s.gcr.io/ingress-nginx/kube-webhook-certgen:v1.0
            k8s.gcr.io/ingress-nginx/controller:v0.35.0
            k8s.gcr.io/pause:3.6
            registry.k8s.io/ingress-nginx/controller:v1.3.0
            registry.k8s.io/ingress-nginx/kube-webhook-certgen:v1.1.1
            k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.3.0
            k8s.gcr.io/sig-storage/csi-snapshotter:v3.0.3
            k8s.gcr.io/sig-storage/csi-snapshotter:v4.0.0
            k8s.gcr.io/sig-storage/snapshot-controller:v3.0.3
            k8s.gcr.io/sig-storage/snapshot-controller:v4.0.0
            k8s.gcr.io/sig-storage/csi-resizer:v1.2.0
            k8s.gcr.io/sig-storage/csi-attacher:v3.1.0
            k8s.gcr.io/sig-storage/csi-provisioner:v3.0.0
            k8s.gcr.io/sig-storage/nfs-subdir-external-provisioner
          )
          for image in ${images[@]}; do 
            rest_name=$(echo $image | rev | cut -d'/' -f1 | rev)
            docker manifest inspect sl01248/$rest_name > /dev/null
            [ $? -eq 0 ] && continue
            docker pull $image
            docker tag $image sl01248/$rest_name
            docker push sl01248/$rest_name
          done
